********title
1 - Introduction to Python: Course Outline
********

********slug
introduction-to-python-outline
********

********featuredimage
https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/pythonbasiccourse/pythoncourse1/pythoncourse1featured.jpg
********

This is the Python basic course. Here you will learn the very basics of this popular programming language. At the end of it, you will be able to make and run your own Python programs. There is a couple of practice projects at the end of the course that are intended for you to apply what you have learned.

## What is Python?

Python is a programming language designed by Guido van Rossum. Its first version was released in 1991 and it didn't stop evolving since then. At the time of writing this course, the latest Python version is 3.11.2. Keep in mind that when you read this there is a high chance that a newer version of Python is already available.

One of the most remarkable aspects of Python is its human-readable syntax. Unlike other popular programming languages like Java or C, Python is easier to learn and the process of writing programs is less cumbersome.

Another important aspect of Python is that it is free and open source. There is also a great and big community and you can ask for help in many portals over the internet.

## What is Python used for?

Python has many different use cases. Here is a short list of popular topics Python is mostly used for:

- Data Analysis
- Data Visualization
- Software Development
- Machine Learning
- Web Development
- Process Automation

## What will I learn in this course?

In this course you will learn the basics of Python, starting from the installation, running your first scripts, working with data types, and finishing with real practice projects. Keep in mind that this course doesn't include advanced topics such as data visualization, web development or machine learning.

The course is intended for you to learn the basic building blocks of Python. If you learn and practice the topics covered in this course, you will be able to move forward and learn more advanced techniques easily.

Here is a list of chapters including this course:

- Introduction
    - [**Installation**](/introduction-to-python/introduction-to-python-installation-setup)
    - [**Terminal**](/introduction-to-python/introduction-to-python-terminal-interpreter)
    - [**Text editors**](/introduction-to-python/introduction-to-python-text-editors-and-ides)
- Data Types
    - [**Introduction to data types**](/introduction-to-python/introduction-to-python-data-types)
    - [**Working with strings**](/introduction-to-python/introduction-to-python-strings)
    - [**Working with lists**](/introduction-to-python/introduction-to-python-lists)
    - [**Working with dictionaries**](/introduction-to-python/introduction-to-python-dictionaries)
- Flow control
    - [**Conditional statements:  if, elif, else statements**](/introduction-to-python/introduction-to-python-conditional-statements)
    - [**Loops: for and while, break, continue and pass**](/introduction-to-python/introduction-to-python-loops)
- Functional programming
    - [**Functions**](/introduction-to-python/introduction-to-python-functions)
    - [**Methods**](/introduction-to-python/introduction-to-python-methods)
    - [**Modules**](/introduction-to-python/introduction-to-python-modules)
- Building your own practice projects
    - [**Projects**](/introduction-to-python/introduction-to-python-practice-proyects)

You can go ahead and click on any link of the list and you will be redirected to each of the Python course chapters. Within each of the chapters you will have the list included so you don't have to go back to this page everytime you want to change the chapter.