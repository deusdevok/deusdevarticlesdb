********title
Circular text using HTML, CSS and JavaScript
********

********slug
html-circular-text-pi
********

********featuredimage
http://shorturl.at/bvG45
********

Have you ever wondered how to make a circular text using HTML, CSS and maybe some JavaScript? In this article you are going to make the following:

![pi circling digits](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigitsfull.gif)

*__Figure 1__. Pi symbol with its digits circling around it.*

In this example the symbol Pi (π) is surrounded by the first digits of the [number pi](https://en.wikipedia.org/wiki/Pi). I made this for a [Codepen Challenge](https://codepen.io/challenges/2022/june/4).

# Prerequisites

Before continuing with this reading, you need to have knowledge of HTML, CSS and JavaScript.

If you haven't learn anything about HTML, CSS and JavaScript or you don't know what I'm talking about, I recommend you start at least with the very basics. Here is a short list of resources you can start learning from.

**HTML**
- [w3schools](https://www.w3schools.com/html/default.asp)
- [HTML MDN web docs (mozilla)](https://developer.mozilla.org/en-US/docs/Learn/HTML)

**CSS**
- [w3schools](https://www.w3schools.com/css/default.asp)
- [CSS MDN web docs (mozilla)](https://developer.mozilla.org/en-US/docs/Learn/CSS)

**HTML and CSS**
- [freeCodeCamp](https://www.freecodecamp.org/)
- [HTML and CSS from Jon Duckett](https://www.htmlandcssbook.com/)

**JavaScript**
- [DeusDev: Getting started with JavaScript: a Hello World program.](https://deusdev.tech/blog/javascript-hello-world/)
- [w3schools](https://www.w3schools.com/js/)
- [freeCodeCamp](https://www.freecodecamp.org/)

There are a lot of free and paid resources all over the internet to learn HTML, CSS and JavaScript. You can search for any of them and find great tutorials!

# First set up

In this article I'm not going to make use of `html` or `body` tags explicitly. Same goes for `link`, `script` or any other general tags you may need to use to properly render your code on a browser window.

Let's set the initial code in a `index.html` file:

```html
<div id="container">
  <h1>π</h1>
  <div id="numbers"></div>
</div> 
```

The code above should be placed inside the `body` section of your *html*. We have a `div` with and *id* named "container". This will encapsulate all the contents: the *pi* symbol and the digits surrounding it.

For the *pi* (π) symbol let's use an `h1` tag and just place the π symbol as the inner text.

For the surrounding numbers, let's just make a `div` with an *id* named "numbers". We will figure out what to do with it later.

We can go ahead and start with some basic stylings:

```css
body {
  background: rgb(255, 158, 158); /* pink background color */
}

#container {
  margin-top: 170px;
}

h1 {
  font-size: 400px;
  color: #0a11a5; /* blue color for pi */
  margin: auto;
  text-align: center;
}
```

The body will have a pink (ish) background color. I also gave the `#container` a margin of 170px from the top.

For the *pi* symbol I changed the font size to make it bigger, gave it a blue color and center it.

![blue Pi symbol with pink background](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigits1.jpg)

*__Figure 2__. Blue Pi digit with a pink background.*

# JavaScript

Since we are going to make the digits composing the *pi* numbers go around in circles, we will surely need some JavaScript to make it work (or al least seems to be the most straightforward way).

What do we need to get started? First we should have some digits of the pi number. So we can define a Javascript constant using the keyword `const` named PI with the digits stored in a string:

```cpp
const PI =
"3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117067982148086513282306647093844609550582231725359408128481117450284102701938521105559644622948954930381964428810975665933446128475648233786783165271201909145648566923460348610454326648213393607260249141273724587006606315588174881520920962829254091715364367892590360011330530548820466521384146951941511609433057270365759591953092186117381932611793105118548074462379962749567351885752724891227938183011949129833673362440656643086021394946395224737190702179860943702770539217176293176752384674818467669405132000568127";
```

Next comes the interesting part: how to deal with the positioning and orientation of the digits?

One way of achieving this is to place each one of the digits in a box (`div`). The box will be of rectangular shape, and the digit will be placed on the upper part of it. Each subsequent box will be slightly rotated in clockwise direction.

The following drawing shows the idea:

![Sketch with pi symbol and boxes with digits around](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/circlingpi1.jpg)

*__Figure 3__. Sketch idea to make the digits go around in a circle, using boxes (div).*

Let's start making the first box, the one containing the first digit: **3**. Since we will be using JavaScript to dynamically generate all the digits, let's work on a JavaScript file from now on for this.

In an *index.js* file, start defining the box using a `div` element. This element will have its own class named "box" and an inner text `innerHTML` corresponding to each of the digits (in this case the first one, **3**). The first digit will be pulled out of the PI constant previously defined, corresponding to the index 0.

As you can see I have defined the **height** of the `div` in JavaScript instead of using CSS. This is because I will modify the height of each box later, and for this JavaScript is needed.

Finally let's place (append) the box in the "numbers" `div`. The other boxes with its digits will also be placed in this `div`.

```cpp
var div = document.createElement("div");
div.className = "box";
div.innerHTML = PI[0];
div.style.height = 400 + "px";
document.getElementById("numbers").appendChild(div);
```

Next, let's style the *#numbers* and *.box* `div`.

Remember that the height was already defined in the *index.js* file. Let's give it absolute positioning, set the width, top, font-size and others. The *transform-origin* is used because this `div` will be rotated, and we need to set the element's base placement on the bottom.

```css
#numbers {
  width: 30px;
  margin: 200px auto;
}

.box {
  position: absolute;
  border: 2px solid #000;
  display: inline-block;
  width: 30px;
  top: 30px;
  font-size: 30px;
  font-weight: bold;
  text-align: center;
  transform-origin: bottom;
} 
```

![Pi symbol with one number on top](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigits2.jpg)

*__Figure 4__. Adding first number on a box.*

Looking good! Now we should repeat the process, each time rotating the box. Let's give each rotated box an angle of 20 degrees respect to the previous one to see how this looks. I'm going to use three more digits (including the period):

```cpp
var div = document.createElement("div");
div.className = "box";
div.innerHTML = PI[1];
div.style.transform = "rotate(" + 20 + "deg)";
div.style.height = 400 + "px";
document.getElementById("numbers").appendChild(div);

var div = document.createElement("div");
div.className = "box";
div.innerHTML = PI[2];
div.style.transform = "rotate(" + 40 + "deg)";
div.style.height = 400 + "px";
document.getElementById("numbers").appendChild(div);

var div = document.createElement("div");
div.className = "box";
div.innerHTML = PI[3];
div.style.transform = "rotate(" + 60 + "deg)";
div.style.height = 400 + "px";
document.getElementById("numbers").appendChild(div);
```

![Pi symbol with 3 numbers and the period around](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigits3.jpg)

*__Figure 5__. Adding more numbers rotating the boxes (div).*

Amazing! Now we just have to repeat this for all the digits. We can do this in a loop. I will use the `setTimeout` function because I want to set a delay between each render. Let's set a timeout of 500 ms (0.5 seconds).

```cpp
var i = 0;

function myLoop() {
  setTimeout(function () {
    
    var div = document.createElement("div");
    div.className = "box";
    div.innerHTML = PI[i];
    div.style.transform = "rotate(" + 20*i + "deg)";
    div.style.height = 400 + "px";
    document.getElementById("numbers").appendChild(div);
    
    i++;
    if (i < PI.length) {
      myLoop();
    }
  }, 500);
}

myLoop();  
```

Using a variable *i* we can pick each digit from the *PI* constant. For the rotation we can define the angle based on the value of *i*. We can multiply the 20 degrees with *i*. This way the angle will be 0, 20, 40, 60, etc.

So far it is looking like this:

![Pi symbol with numbers going around in circles](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigits4.gif)

*__Figure 6__. Adding JavaScript loop making the digits appear one at a time, with the help of the setTimeout function.*

We basically got it. There is, however, an overlapping of the numbers after one lap. How to avoid overlapping of the numbers?

One way of solving this issue is to change the height of each box based on the value of *i*. I also included padding based on the value of *i*. The parameters used (in this case the factor 0.3) depends on the size of the box, and the way I found this value to work is by trial and error.

Finally I edited the rotation angle on each box to make the numbers get closer together, and set a timeout of 20 ms to make it go faster. The resulting code is this:

```cpp
function myLoop() {
  setTimeout(function () {
    
    var div = document.createElement("div");
    div.className = "box";
    div.innerHTML = PI[i];
    div.style.transform = "rotate(" + (i * 360 * 6.5) / PI.length + "deg)";
    div.style.height = 400 - 0.3*i + "px";
    div.style.paddingTop = 0.3*i + "px";
    
    document.getElementById("numbers").appendChild(div);
    
    i++;
    if (i < PI.length) {
      myLoop();
    }
  }, 20);
}

myLoop(); 
```

The result looks like this:

![Pi symbol with numbers going around with boxes](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigits5.gif)

*__Figure 7__. Adding all digits and changing height and padding of the divs to avoid overlapping.*

Beautiful! Let's remove the borders of the boxes. The final thing looks like this:

![digits of pi circling around pi symbol](https://raw.githubusercontent.com/deusdevok/deusdevarticlesdb/main/blog/htmlcirculartextpi/picirclingdigitsfull.gif)

*__Figure 8__. After taking out the border of each of the boxes (divs), the final animation looks like this.*

# Summary

In this article we have gone through a way of making a circular text using HTML, CSS and JavaScript.

The full working code can be seen on this Codepen link:

<iframe height="296.79998779296875" style="width: 100%;" scrolling="no" title="Pi circling digits" src="https://codepen.io/deusdev/embed/ExEYMbr?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">
  See the Pen <a href="https://codepen.io/deusdev/pen/ExEYMbr">
  Pi circling digits</a> by Deus Dev (<a href="https://codepen.io/deusdev">@deusdev</a>)
  on <a href="https://codepen.io">CodePen</a>.
</iframe>

You can play around with it, changing colors, parameters and more.

I hope you found this article interesting and insightful. See you next time!